config {
  type: "operations",
  dependencies: ["src_msp_requisition"]
}

DECLARE success BOOLEAN DEFAULT FALSE;
BEGIN
    BEGIN

EXECUTE IMMEDIATE """CREATE OR REPLACE TABLE ${declarations.intrmed_req_tbl_name()} AS SELECT
  cnsd.*,
  b.industry 
    ,case when (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_2 else norm_city_non_us.location_level_2 end) is null  then norm_state.location_level_2 
      else (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_2 else norm_city_non_us.location_level_2 end)   end as location_level_2, 
    
    case when (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_3 else norm_city_non_us.location_level_3 end) is null  then norm_state.location_level_3 
      else (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_3 else norm_city_non_us.location_level_3 end)   end as location_level_3, 

    case when (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_4 else norm_city_non_us.location_level_4 end) is null  then norm_state.location_level_4 
      else (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_4 else norm_city_non_us.location_level_4 end)   end as location_level_4, 

    case when (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_5 else norm_city_non_us.location_level_5 end) is null  then norm_state.location_level_5 
      else (case when LOWER(norm_country.country_code) = 'us' then norm_city_us.location_level_5 else norm_city_non_us.location_level_5 end)   end as location_level_5,
      tc.title_cleaned,
      tc.ms_category_1,
      tc.ms_category_2 ,
      tc.onet_career_pathway,
      tc.onet_job_family, 
      tc.onet_career_cluster, 
      tc.onet_occupation, 
      tc.soc_major_group,
      tc.soc_minor_group,
      tc.soc_broad_group , 
      tc.onet_detailed_occupation, 
      tc.bg_categorization, 
      tc.tk_categorization, 
      tc.rand_categorization, 
      tc.rmi_categorization,
      prgdtls_trdr.account_leader,
      prgdtls_trdr.account_name,
      prgdtls_trdr.account_svp,
      prgdtls_trdr.account_vp,
      prgdtls_trdr.ats_provider,
      prgdtls_trdr.contract_duration_months,
      prgdtls_trdr.contract_end_date,
      prgdtls_trdr.contracting_country,
      prgdtls_trdr.executive_sponsor,
      prgdtls_trdr.go_live_date,
      prgdtls_trdr.industry_sector,
      prgdtls_trdr.industry as account_industry,
      prgdtls_trdr.program_type,
      prgdtls_trdr.program_program_name,
      prgdtls_trdr.region,
      prgdtls_trdr.vms_provider
FROM ${declarations.src_req_tbl_name()} cnsd
  left join ${declarations.lkp_global_industry_mapping()} b on cnsd.rsr_client_code = b.rsr_client_code 
  LEFT OUTER JOIN ${declarations.lkp_normalization_location_country()} norm_country
  ON (LOWER(norm_country.input) = LOWER(case when cnsd.rsr_country is null then cnsd.country   else cnsd.rsr_country end)) 
  LEFT OUTER JOIN ${declarations.lkp_normalization_location()} norm_city_us
  ON
    ( LOWER(norm_city_us.location_raw_input) = CONCAT(LOWER(cnsd.city), ', ', LOWER(cnsd.rsr_state)) 
      AND cnsd.city IS NOT NULL 
      AND LOWER(norm_city_us.location_country_input) = LOWER(norm_country.country_code) 
      AND LOWER(norm_country.country_code) =  'us'
      )
  LEFT OUTER JOIN ${declarations.lkp_normalization_location()} norm_city_non_us
  ON ((LOWER(norm_city_non_us.location_raw_input) = LOWER(cnsd.city)) AND cnsd.city IS NOT NULL
      AND LOWER(norm_city_non_us.location_country_input) = LOWER(norm_country.country_code) 
      AND LOWER(norm_country.country_code) != 'us')
  LEFT OUTER JOIN ${declarations.lkp_normalization_location()} norm_state
  ON
    (LOWER(norm_state.location_raw_input) = LOWER(cnsd.rsr_state)
      AND cnsd.rsr_state IS NOT NULL  
      AND LOWER(norm_state.location_country_input) = LOWER(norm_country.country_code))
  left outer join ${declarations.lkp_normalization_job_title()}  tc 
on lower(cnsd.req_title) = lower(tc.req_title) and cnsd.rsr_client_code = tc.rsr_client_code
left outer join ${declarations.lkp_misc_slsfrc_gbl_paap_derv_gcp_client_code_dedup()} prgdtls_trdr on cnsd.rsr_client_code = prgdtls_trdr.talentradar_gcp_client_code_new""";

SET success = TRUE;
EXCEPTION WHEN ERROR THEN
    INSERT INTO ${declarations.tbl_execution_log()} (execution_time, query_name, status, dataform_name, dataform_region, error_message)
    VALUES (CURRENT_TIMESTAMP(), 'intrmed_msp_requisition.sqlx', 'FAILED', 'dataform_test_template_sb', ${declarations.var_dataform_region()} , 'query failed to execute');
    end;
 IF success THEN
    INSERT INTO ${declarations.tbl_execution_log()} (execution_time, query_name, status, dataform_name, dataform_region)
    VALUES (CURRENT_TIMESTAMP(), 'intrmed_msp_requisition.sqlx', 'SUCCESS', 'dataform_test_template_sb', ${declarations.var_dataform_region()});
  END IF;
  END

