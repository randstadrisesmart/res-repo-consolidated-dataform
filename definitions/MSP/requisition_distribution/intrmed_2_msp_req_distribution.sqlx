config {
    type: "operations",
    dependencies: ["intrmed_1_msp_req_distribution"],
    description: "logic to identify supplier_type",
    tags: "MSP"
}

DECLARE success BOOLEAN DEFAULT FALSE;
DECLARE query_name STRING;
SET query_name = 'intrmed_2_msp_req_distribution.sqlx';

BEGIN
    BEGIN

EXECUTE IMMEDIATE """CREATE OR REPLACE TABLE ${declarations.intrmed_2_req_distribution_tbl_name()} AS 
SELECT DISTINCT
  req_id, buyer_code, supplier_code, req_distribution_date, supplier,
  CASE 
    WHEN intermediate.supp_type_buyer_code IS NOT NULL THEN 'midmarket'
    WHEN REGEXP_CONTAINS(LOWER(intermediate.supplier_name_parent_account_name), r'^randstad') THEN 'OpCo'
    ELSE 'AV'
  END AS supplier_type
FROM ${declarations.intrmed_1_req_distribution_tbl_name()} AS intermediate""";

SET success = TRUE;
EXCEPTION WHEN ERROR THEN
  BEGIN
      DECLARE errmessage STRING;
      SET errmessage = @@error.message;

    INSERT INTO ${declarations.tbl_execution_log()} (dfm_execution_time,execution_time, query_name, status, dataform_name, dataform_region, error_message)
    VALUES (${declarations.starttime},CURRENT_TIMESTAMP(), query_name, 'FAILED', ${declarations.dfm_name}, ${declarations.var_dataform_region()} , errmessage);
    END;
    END;
 IF success THEN
    INSERT INTO ${declarations.tbl_execution_log()} (dfm_execution_time,execution_time, query_name, status, dataform_name, dataform_region)
    VALUES (${declarations.starttime},CURRENT_TIMESTAMP(), query_name, 'SUCCESS', ${declarations.dfm_name}, ${declarations.var_dataform_region()});
  END IF;
  END
  