config {
    type: "operations",
    dependencies: ["assignment_trend_int1"]
}
DECLARE success BOOLEAN DEFAULT FALSE;
BEGIN
BEGIN
EXECUTE IMMEDIATE """CREATE OR REPLACE TABLE ${ref("cnsd_anmz_msp_nam_assignment_trend_deepthi")} AS SELECT DISTINCT
  intermediate.assignment_id,
  intermediate.business_unit,
  intermediate.buyer,
  intermediate.buyer_code,
  intermediate.calendar_reporting_month,
  intermediate.city,
  intermediate.close_reason,
  intermediate.consolidated_worker_id,
  intermediate.contingent_vs_sow,
  intermediate.cost_center,
  intermediate.country,
  intermediate.currency,
  intermediate.current_date,
  intermediate.labor_type,
  intermediate.location,
  intermediate.main_document_id,
  intermediate.main_document_type,
  intermediate.max_reporting_week_by_month_flag,
  intermediate.max_reporting_week_overall_flag,
  intermediate.month_filter,
  intermediate.posting_type,
  intermediate.preferred_supplier_status,
  intermediate.reporting_date_445_month,
  intermediate.reporting_date_445_week,
  intermediate.reporting_date_calendar,
  intermediate.reporting_date_ends,
  intermediate.reporting_date_month_calendar,
  intermediate.reporting_date_week_start,
  intermediate.reporting_month,
  intermediate.req_approved_date,
  intermediate.req_closed_date,
  intermediate.req_id,
  intermediate.req_title,
  intermediate.req_title_classification,
  intermediate.req_type,
  intermediate.rsr_assignment_close_rating,
  intermediate.rsr_assignment_close_reason,
  intermediate.rsr_client_code,
  intermediate.rsr_country,
  intermediate.rsr_labor_type,
  intermediate.rsr_processed_date,
  intermediate.rsr_region,
  intermediate.rsr_sourced_type,
  intermediate.rsr_state,
  intermediate.rsr_supplier,
  intermediate.site,
  intermediate.site_code,
  intermediate.site_wk,
  intermediate.sourcing_type_wk,
  intermediate.sourcing_type_wk_mapped,
  intermediate.sourcing_type_wo,
  intermediate.sourcing_type_wo_mapped,
  intermediate.state_province, supplier,
  intermediate.supplier_code,
  intermediate.supplier_diverse_small,
  intermediate.supplier_erp_id,
  intermediate.supplier_primary_diversity_type,
  intermediate.supplier_small_business,
  intermediate.worker_closed_date,
  intermediate.worker_end_date,
  intermediate.worker_id,
  intermediate.worker_start_date,
  intermediate.industry,
  intermediate.location_level_2,
  intermediate.location_level_3,
  intermediate.location_level_4,
  intermediate.location_level_5,
  intermediate.title_cleaned,
  intermediate.ms_category_1,
  intermediate.ms_category_2,
  intermediate.onet_career_pathway,
  intermediate.onet_job_family,
  intermediate.onet_career_cluster,
  intermediate.onet_occupation,
  intermediate.soc_major_group,
  intermediate.soc_minor_group,
  intermediate.soc_broad_group,
  intermediate.onet_detailed_occupation,
  intermediate.bg_categorization,
  intermediate.tk_categorization,
  intermediate.rand_categorization,
  intermediate.rmi_categorization,
  intermediate.supplier_name_parent_account_id,
  intermediate.supplier_name_parent_account_name,
  intermediate.supplier_name_randstad_entity_name,
  intermediate.supplier_name_randstad_business_line,
  intermediate.supplier_name_holding_company,
  intermediate.supplier_name_supplier_apttus_id,
  CASE 
    WHEN intermediate.supp_type_buyer_code IS NOT NULL THEN 'midmarket'
    WHEN REGEXP_CONTAINS(LOWER(intermediate.supplier_name_parent_account_name), r'^randstad') THEN 'OpCo'
    ELSE 'AV'
  END AS supplier_type,
  intermediate.account_leader,
  intermediate.account_name,
  intermediate.account_svp,
  intermediate.account_vp,
  intermediate.ats_provider,
  intermediate.contract_duration_months,
  intermediate.contract_end_date,
  intermediate.contracting_country,
  intermediate.executive_sponsor,
  intermediate.go_live_date,
  intermediate.industry_sector,
  intermediate.account_industry,
  intermediate.program_type,
  intermediate.program_program_name,
  intermediate.region,
  intermediate.vms_provider
FROM
  ${ref("assignment_trend_intermediate1")} AS intermediate""";
   SET success = TRUE;
EXCEPTION WHEN ERROR THEN
    INSERT INTO dataform_cnsd.execution_logs (execution_time, query_name, status, dataform_name, error_message)
    VALUES (CURRENT_TIMESTAMP(), 'assignment_trend_last', 'FAILED', 'dataform-cnsd-nam', 'assignment_trend_last failed to execute');
    end;
 IF success THEN
    INSERT INTO dataform_cnsd.execution_logs (execution_time, query_name, status, dataform_name)
    VALUES (CURRENT_TIMESTAMP(), 'assignment_trend_last', 'SUCCESS', 'dataform-cnsd-nam');
  END IF;
  END